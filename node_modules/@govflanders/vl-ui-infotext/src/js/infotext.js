/**
 * Infotext
 */
import textFit from 'textfit';

const itValueClass = `js-${vl.ns}infotext__value`,
  dataPrefix = `data-${vl.ns}`,
  itValueAtt = `${dataPrefix}infotext-value`,
  itDressedAtt = `${dataPrefix}infotext-dressed`;

class Infotext {
  /**
   * dress one element
   * @param element
   */
  dress(element) {
    element.setAttribute(itDressedAtt, true);

    let number = element.innerHTML;

    number = number.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1.');
    element.innerHTML = number;

    textFit(element, {maxFontSize: 50});
  }

  /**
   * dressAll function for the range functionality
   * @return {false}
   */
  dressAll() {
    const elements = document.querySelectorAll(
      `.${itValueClass}:not([${itDressedAtt}]):not([data-${vl.ns}js-dress="false"]),
      [${itValueAtt}]:not([${itDressedAtt}]):not([data-${vl.ns}js-dress="false"])`
    );

    vl.util.each(elements, element => this.dress(element));
  }
}

if(!('infotext' in vl)) {
  vl.infotext = new Infotext();
  vl.infotext.dressAll();

  window.addEventListener(
    'resize',
    vl.util.debounce(() => {
      vl.infotext.dressAll();
    }, 100),
    false
  );
}

export default Infotext;
